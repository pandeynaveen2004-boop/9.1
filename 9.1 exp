
const express = require("express");


2	+
const cors = require("cors");
3	+
4	+
const app = express();
5	+
app.use(cors());
6	+
app.use(express.json());
7	+
8	+
// API route
9	+
app.get("/api/message", (req, res) => {
10	+
  res.json({ message: "Hello from Node.js backend running in Docker!" });
11	+
});
12	+
13	+
const PORT = process.env.PORT || 5000;
14	+
app.listen(PORT, () => console.log(`Backend running on port ${PORT}`));
15	+
{
16	+
  "name": "frontend",
17	+
  "version": "1.0.0",
18	+
  "private": true,
19	+
  "dependencies": {
20	+
    "react": "^18.2.0",
21	+
    "react-dom": "^18.2.0",
22	+
    "react-scripts": "5.0.1"
23	+
  },
24	+
  "scripts": {
25	+
    "start": "react-scripts start",
26	+
    "build": "react-scripts build"
27	+
  }
28	+
}
29	+
import React, { useEffect, useState } from "react";
30	+
31	+
function App() {
32	+
  const [message, setMessage] = useState("Loading...");
33	+
34	+
  useEffect(() => {
35	+
    fetch("/api/message")
36	+
      .then((res) => res.json())
37	+
      .then((data) => setMessage(data.message))
38	+
      .catch(() => setMessage("Backend not reachable"));
39	+
  }, []);
40	+
41	+
  return (
42	+
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 text-center">
43	+
      <h1 className="text-3xl font-bold text-blue-700 mb-4">
44	+
        React + Node + Docker Demo
45	+
      </h1>
46	+
      <p className="text-lg text-gray-800">{message}</p>
47	+
    </div>
48	+
  );
49	+
}
50	+
51	+
export default App;
52	+
server {
53	+
  listen 80;
54	+
55	+
  location / {
56	+
    root /usr/share/nginx/html;
57	+
    index index.html;
58	+
    try_files $uri /index.html;
59	+
  }
60	+
61	+
  # Proxy API requests to backend
62	+
  location /api/ {
63	+
    proxy_pass http://backend:5000;
64	+
  }
65	+
}
66	+
67	+
68	+
services:
69	+
  backend:
70	+
    build: ./backend
71	+
    container_name: node-backend
72	+
    ports:
73	+
      - "5000:5000"
74	+
75	+
  frontend:
76	+
    build: ./frontend
77	+
    container_name: react-frontend
78	+
    ports:
79	+
      - "80:80"
80	+
    depends_on:
81	+
      - backend
